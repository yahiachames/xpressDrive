{"version":3,"sources":["useCarouselController.tsx"],"names":["React","Easing","runOnJS","useSharedValue","dealWithAnimation","useCarouselController","options","size","loop","handlerOffsetX","withAnimation","disable","originalLength","length","onChange","duration","index","sharedIndex","useRef","sharedPreIndex","currentFixedPage","useCallback","Math","round","value","fixed","abs","convertToSharedIndex","i","computedIndex","current","toInt","_sharedIndex","getCurrentIndex","canSliding","onScrollEnd","onScrollBegin","scrollWithTiming","toValue","onFinished","callback","isFinished","defaultWithAnimation","type","config","easing","easeOutQuart","next","opts","count","animated","nextPage","prev","prevPage","to","idx","offset","scrollTo","n"],"mappings":"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","sourcesContent":["import React from 'react';\nimport type Animated from 'react-native-reanimated';\nimport { Easing } from '../constants';\nimport { runOnJS, useSharedValue } from 'react-native-reanimated';\nimport type {\n    TCarouselActionOptions,\n    TCarouselProps,\n    WithTimingAnimation,\n} from '../types';\nimport { dealWithAnimation } from '@/utils/dealWithAnimation';\n\ninterface IOpts {\n    loop: boolean;\n    size: number;\n    handlerOffsetX: Animated.SharedValue<number>;\n    withAnimation?: TCarouselProps['withAnimation'];\n    disable?: boolean;\n    duration?: number;\n    originalLength: number;\n    length: number;\n    onScrollBegin?: () => void;\n    onScrollEnd?: () => void;\n    // the length before fill data\n    onChange: (index: number) => void;\n}\n\nexport interface ICarouselController {\n    length: number;\n    index: Animated.SharedValue<number>;\n    sharedIndex: React.MutableRefObject<number>;\n    sharedPreIndex: React.MutableRefObject<number>;\n    prev: (opts?: TCarouselActionOptions) => void;\n    next: (opts?: TCarouselActionOptions) => void;\n    computedIndex: () => void;\n    getCurrentIndex: () => number;\n    to: (index: number, animated?: boolean) => void;\n    scrollTo: (opts?: TCarouselActionOptions) => void;\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n    const {\n        size,\n        loop,\n        handlerOffsetX,\n        withAnimation,\n        disable = false,\n        originalLength,\n        length,\n        onChange,\n        duration,\n    } = options;\n\n    const index = useSharedValue<number>(0);\n    // The Index displayed to the user\n    const sharedIndex = React.useRef<number>(0);\n    const sharedPreIndex = React.useRef<number>(0);\n\n    const currentFixedPage = React.useCallback(() => {\n        if (loop) {\n            return -Math.round(handlerOffsetX.value / size);\n        }\n\n        const fixed = (handlerOffsetX.value / size) % length;\n        return Math.round(\n            handlerOffsetX.value <= 0\n                ? Math.abs(fixed)\n                : Math.abs(fixed > 0 ? length - fixed : 0)\n        );\n    }, [handlerOffsetX, length, size, loop]);\n\n    const convertToSharedIndex = React.useCallback(\n        (i: number) => {\n            if (loop) {\n                switch (originalLength) {\n                    case 1:\n                        return 0;\n                    case 2:\n                        return i % 2;\n                }\n            }\n            return i;\n        },\n        [originalLength, loop]\n    );\n\n    const computedIndex = React.useCallback(() => {\n        sharedPreIndex.current = sharedIndex.current;\n        const toInt = (handlerOffsetX.value / size) % length;\n        const i =\n            handlerOffsetX.value <= 0\n                ? Math.abs(toInt)\n                : Math.abs(toInt > 0 ? length - toInt : 0);\n        index.value = i;\n        const _sharedIndex = convertToSharedIndex(i);\n        sharedIndex.current = _sharedIndex;\n        onChange(_sharedIndex);\n    }, [\n        length,\n        handlerOffsetX,\n        sharedPreIndex,\n        index,\n        size,\n        sharedIndex,\n        convertToSharedIndex,\n        onChange,\n    ]);\n\n    const getCurrentIndex = React.useCallback(() => {\n        return index.value;\n    }, [index]);\n\n    const canSliding = React.useCallback(() => {\n        return !disable;\n    }, [disable]);\n\n    const onScrollEnd = React.useCallback(() => {\n        options.onScrollEnd?.();\n    }, [options]);\n\n    const onScrollBegin = React.useCallback(() => {\n        options.onScrollBegin?.();\n    }, [options]);\n\n    const scrollWithTiming = React.useCallback(\n        (toValue: number, onFinished?: () => void) => {\n            'worklet';\n            const callback = (isFinished: boolean) => {\n                'worklet';\n                if (isFinished) {\n                    runOnJS(onScrollEnd)();\n                    onFinished && runOnJS(onFinished)();\n                }\n            };\n\n            const defaultWithAnimation: WithTimingAnimation = {\n                type: 'timing',\n                config: { duration, easing: Easing.easeOutQuart },\n            };\n\n            return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n                toValue,\n                callback\n            );\n        },\n        [duration, withAnimation, onScrollEnd]\n    );\n\n    const next = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            'worklet';\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value >= length - 1)) return;\n\n            onScrollBegin?.();\n\n            const nextPage = currentFixedPage() + count;\n            index.value = nextPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -nextPage * size,\n                    onFinished\n                ) as any;\n            } else {\n                handlerOffsetX.value = -nextPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            length,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const prev = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value <= 0)) return;\n\n            onScrollBegin?.();\n\n            const prevPage = currentFixedPage() - count;\n            index.value = prevPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -prevPage * size,\n                    onFinished\n                );\n            } else {\n                handlerOffsetX.value = -prevPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const to = React.useCallback(\n        (idx: number, animated: boolean = false) => {\n            if (idx === index.value) return;\n            if (!canSliding()) return;\n\n            onScrollBegin?.();\n\n            const offset = handlerOffsetX.value + (index.value - idx) * size;\n\n            if (animated) {\n                index.value = idx;\n                handlerOffsetX.value = scrollWithTiming(offset);\n            } else {\n                handlerOffsetX.value = offset;\n                index.value = idx;\n                runOnJS(onScrollEnd)();\n            }\n        },\n        [\n            index,\n            canSliding,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            onScrollEnd,\n        ]\n    );\n\n    const scrollTo = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count, animated = false, onFinished } = opts;\n            if (!count) {\n                return;\n            }\n            const n = Math.round(count);\n            if (n < 0) {\n                prev({ count: Math.abs(n), animated, onFinished });\n            } else {\n                next({ count: n, animated, onFinished });\n            }\n        },\n        [prev, next]\n    );\n\n    return {\n        next,\n        prev,\n        to,\n        scrollTo,\n        index,\n        length,\n        sharedIndex,\n        sharedPreIndex,\n        computedIndex,\n        getCurrentIndex,\n    };\n}\n"]}