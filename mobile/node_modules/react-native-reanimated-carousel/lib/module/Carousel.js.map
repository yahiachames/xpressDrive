{"version":3,"sources":["Carousel.tsx"],"names":["React","Animated","runOnJS","useDerivedValue","useCarouselController","useAutoPlay","usePropsErrorBoundary","ScrollViewGesture","useVisibleRanges","StyleSheet","View","DATA_LENGTH","BaseLayout","useLayoutConfig","useInitProps","CTX","useCommonVariables","useOnProgressChange","Carousel","forwardRef","_props","ref","props","data","rawData","loop","mode","style","width","height","vertical","autoPlay","windowSize","autoPlayReverse","autoPlayInterval","scrollAnimationDuration","withAnimation","renderItem","onScrollEnd","onSnapToItem","onScrollBegin","onProgressChange","customAnimation","commonVariables","size","handlerOffsetX","offsetX","totalSize","length","x","value","isNaN","carouselController","disable","originalLength","_onScrollEnd","onChange","i","duration","next","prev","sharedPreIndex","sharedIndex","computedIndex","getCurrentIndex","start","pause","useCallback","current","scrollViewGestureOnScrollBegin","scrollViewGestureOnScrollEnd","scrollViewGestureOnTouchBegin","scrollViewGestureOnTouchEnd","goToIndex","animated","to","useImperativeHandle","scrollTo","visibleRanges","total","viewSize","translation","layoutConfig","renderLayout","item","realIndex","SINGLE_ITEM","DOUBLE_ITEM","animationValue","index","common","styles","container","itemsVertical","itemsHorizontal","map","create","overflow","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Animated, { runOnJS, useDerivedValue } from 'react-native-reanimated';\n\nimport { useCarouselController } from './hooks/useCarouselController';\nimport { useAutoPlay } from './hooks/useAutoPlay';\nimport { usePropsErrorBoundary } from './hooks/usePropsErrorBoundary';\nimport { ScrollViewGesture } from './ScrollViewGesture';\nimport { useVisibleRanges } from './hooks/useVisibleRanges';\n\nimport type { ICarouselInstance, TCarouselProps } from './types';\nimport { StyleSheet, View } from 'react-native';\nimport { DATA_LENGTH } from './constants';\nimport { BaseLayout } from './layouts/BaseLayout';\nimport { useLayoutConfig } from './hooks/useLayoutConfig';\nimport { useInitProps } from './hooks/useInitProps';\nimport { CTX } from './store';\nimport { useCommonVariables } from './hooks/useCommonVariables';\nimport { useOnProgressChange } from './hooks/useOnProgressChange';\n\nconst Carousel = React.forwardRef<ICarouselInstance, TCarouselProps<any>>(\n    (_props, ref) => {\n        const props = useInitProps(_props);\n\n        const {\n            data,\n            rawData,\n            loop,\n            mode,\n            style,\n            width,\n            height,\n            vertical,\n            autoPlay,\n            windowSize,\n            autoPlayReverse,\n            autoPlayInterval,\n            scrollAnimationDuration,\n            withAnimation,\n            renderItem,\n            onScrollEnd,\n            onSnapToItem,\n            onScrollBegin,\n            onProgressChange,\n            customAnimation,\n        } = props;\n\n        const commonVariables = useCommonVariables(props);\n        const { size, handlerOffsetX } = commonVariables;\n\n        const offsetX = useDerivedValue(() => {\n            const totalSize = size * data.length;\n            const x = handlerOffsetX.value % totalSize;\n\n            if (!loop) {\n                return handlerOffsetX.value;\n            }\n            return isNaN(x) ? 0 : x;\n        }, [loop, size, data]);\n\n        usePropsErrorBoundary(props);\n        useOnProgressChange({ size, offsetX, rawData, onProgressChange });\n\n        const carouselController = useCarouselController({\n            loop,\n            size,\n            handlerOffsetX,\n            length: data.length,\n            disable: !data.length,\n            withAnimation,\n            originalLength: data.length,\n            onScrollEnd: () => runOnJS(_onScrollEnd)(),\n            onScrollBegin: () => !!onScrollBegin && runOnJS(onScrollBegin)(),\n            onChange: (i) => !!onSnapToItem && runOnJS(onSnapToItem)(i),\n            duration: scrollAnimationDuration,\n        });\n\n        const {\n            next,\n            prev,\n            sharedPreIndex,\n            sharedIndex,\n            computedIndex,\n            getCurrentIndex,\n        } = carouselController;\n\n        const { start, pause } = useAutoPlay({\n            autoPlay,\n            autoPlayInterval,\n            autoPlayReverse,\n            carouselController,\n        });\n\n        const _onScrollEnd = React.useCallback(() => {\n            computedIndex();\n            onScrollEnd?.(sharedPreIndex.current, sharedIndex.current);\n        }, [sharedPreIndex, sharedIndex, computedIndex, onScrollEnd]);\n\n        const scrollViewGestureOnScrollBegin = React.useCallback(() => {\n            pause();\n            onScrollBegin?.();\n        }, [onScrollBegin, pause]);\n\n        const scrollViewGestureOnScrollEnd = React.useCallback(() => {\n            start();\n            _onScrollEnd();\n        }, [_onScrollEnd, start]);\n\n        const scrollViewGestureOnTouchBegin = React.useCallback(pause, [pause]);\n\n        const scrollViewGestureOnTouchEnd = React.useCallback(start, [start]);\n\n        const goToIndex = React.useCallback(\n            (i: number, animated?: boolean) => {\n                carouselController.to(i, animated);\n            },\n            [carouselController]\n        );\n\n        React.useImperativeHandle(\n            ref,\n            () => ({\n                next,\n                prev,\n                getCurrentIndex,\n                goToIndex,\n                scrollTo: carouselController.scrollTo,\n            }),\n            [\n                getCurrentIndex,\n                goToIndex,\n                next,\n                prev,\n                carouselController.scrollTo,\n            ]\n        );\n\n        const visibleRanges = useVisibleRanges({\n            total: data.length,\n            viewSize: size,\n            translation: handlerOffsetX,\n            windowSize,\n        });\n\n        const layoutConfig = useLayoutConfig({ ...props, size });\n\n        const renderLayout = React.useCallback(\n            (item: any, i: number) => {\n                let realIndex = i;\n                if (rawData.length === DATA_LENGTH.SINGLE_ITEM) {\n                    realIndex = i % 1;\n                }\n\n                if (rawData.length === DATA_LENGTH.DOUBLE_ITEM) {\n                    realIndex = i % 2;\n                }\n\n                return (\n                    <BaseLayout\n                        key={i}\n                        index={i}\n                        handlerOffsetX={offsetX}\n                        visibleRanges={visibleRanges}\n                        animationStyle={customAnimation || layoutConfig}\n                    >\n                        {({ animationValue }) =>\n                            renderItem({\n                                item,\n                                index: realIndex,\n                                animationValue,\n                            })\n                        }\n                    </BaseLayout>\n                );\n            },\n            [\n                rawData,\n                offsetX,\n                visibleRanges,\n                renderItem,\n                layoutConfig,\n                customAnimation,\n            ]\n        );\n\n        return (\n            <CTX.Provider value={{ props, common: commonVariables }}>\n                <View\n                    style={[\n                        styles.container,\n                        { width: width || '100%', height: height || '100%' },\n                        style,\n                    ]}\n                >\n                    <ScrollViewGesture\n                        size={size}\n                        translation={handlerOffsetX}\n                        onScrollBegin={scrollViewGestureOnScrollBegin}\n                        onScrollEnd={scrollViewGestureOnScrollEnd}\n                        onTouchBegin={scrollViewGestureOnTouchBegin}\n                        onTouchEnd={scrollViewGestureOnTouchEnd}\n                    >\n                        <Animated.View\n                            key={mode}\n                            style={[\n                                styles.container,\n                                {\n                                    width: width || '100%',\n                                    height: height || '100%',\n                                },\n                                style,\n                                vertical\n                                    ? styles.itemsVertical\n                                    : styles.itemsHorizontal,\n                            ]}\n                        >\n                            {data.map(renderLayout)}\n                        </Animated.View>\n                    </ScrollViewGesture>\n                </View>\n            </CTX.Provider>\n        );\n    }\n);\n\nexport default Carousel as <T extends any>(\n    props: React.PropsWithChildren<TCarouselProps<T>>\n) => React.ReactElement;\n\nconst styles = StyleSheet.create({\n    container: {\n        overflow: 'hidden',\n    },\n    itemsHorizontal: {\n        flexDirection: 'row',\n    },\n    itemsVertical: {\n        flexDirection: 'column',\n    },\n});\n"]}