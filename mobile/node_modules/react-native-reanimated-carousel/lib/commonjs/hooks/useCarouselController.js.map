{"version":3,"sources":["useCarouselController.tsx"],"names":["useCarouselController","options","size","loop","handlerOffsetX","withAnimation","disable","originalLength","length","onChange","duration","index","sharedIndex","React","useRef","sharedPreIndex","currentFixedPage","useCallback","Math","round","value","fixed","abs","convertToSharedIndex","i","computedIndex","current","toInt","_sharedIndex","getCurrentIndex","canSliding","onScrollEnd","onScrollBegin","scrollWithTiming","toValue","onFinished","callback","isFinished","runOnJS","defaultWithAnimation","type","config","easing","Easing","easeOutQuart","dealWithAnimation","next","opts","count","animated","nextPage","prev","prevPage","to","idx","offset","scrollTo","n"],"mappings":"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","sourcesContent":["import React from 'react';\nimport type Animated from 'react-native-reanimated';\nimport { Easing } from '../constants';\nimport { runOnJS, useSharedValue } from 'react-native-reanimated';\nimport type {\n    TCarouselActionOptions,\n    TCarouselProps,\n    WithTimingAnimation,\n} from '../types';\nimport { dealWithAnimation } from '@/utils/dealWithAnimation';\n\ninterface IOpts {\n    loop: boolean;\n    size: number;\n    handlerOffsetX: Animated.SharedValue<number>;\n    withAnimation?: TCarouselProps['withAnimation'];\n    disable?: boolean;\n    duration?: number;\n    originalLength: number;\n    length: number;\n    onScrollBegin?: () => void;\n    onScrollEnd?: () => void;\n    // the length before fill data\n    onChange: (index: number) => void;\n}\n\nexport interface ICarouselController {\n    length: number;\n    index: Animated.SharedValue<number>;\n    sharedIndex: React.MutableRefObject<number>;\n    sharedPreIndex: React.MutableRefObject<number>;\n    prev: (opts?: TCarouselActionOptions) => void;\n    next: (opts?: TCarouselActionOptions) => void;\n    computedIndex: () => void;\n    getCurrentIndex: () => number;\n    to: (index: number, animated?: boolean) => void;\n    scrollTo: (opts?: TCarouselActionOptions) => void;\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n    const {\n        size,\n        loop,\n        handlerOffsetX,\n        withAnimation,\n        disable = false,\n        originalLength,\n        length,\n        onChange,\n        duration,\n    } = options;\n\n    const index = useSharedValue<number>(0);\n    // The Index displayed to the user\n    const sharedIndex = React.useRef<number>(0);\n    const sharedPreIndex = React.useRef<number>(0);\n\n    const currentFixedPage = React.useCallback(() => {\n        if (loop) {\n            return -Math.round(handlerOffsetX.value / size);\n        }\n\n        const fixed = (handlerOffsetX.value / size) % length;\n        return Math.round(\n            handlerOffsetX.value <= 0\n                ? Math.abs(fixed)\n                : Math.abs(fixed > 0 ? length - fixed : 0)\n        );\n    }, [handlerOffsetX, length, size, loop]);\n\n    const convertToSharedIndex = React.useCallback(\n        (i: number) => {\n            if (loop) {\n                switch (originalLength) {\n                    case 1:\n                        return 0;\n                    case 2:\n                        return i % 2;\n                }\n            }\n            return i;\n        },\n        [originalLength, loop]\n    );\n\n    const computedIndex = React.useCallback(() => {\n        sharedPreIndex.current = sharedIndex.current;\n        const toInt = (handlerOffsetX.value / size) % length;\n        const i =\n            handlerOffsetX.value <= 0\n                ? Math.abs(toInt)\n                : Math.abs(toInt > 0 ? length - toInt : 0);\n        index.value = i;\n        const _sharedIndex = convertToSharedIndex(i);\n        sharedIndex.current = _sharedIndex;\n        onChange(_sharedIndex);\n    }, [\n        length,\n        handlerOffsetX,\n        sharedPreIndex,\n        index,\n        size,\n        sharedIndex,\n        convertToSharedIndex,\n        onChange,\n    ]);\n\n    const getCurrentIndex = React.useCallback(() => {\n        return index.value;\n    }, [index]);\n\n    const canSliding = React.useCallback(() => {\n        return !disable;\n    }, [disable]);\n\n    const onScrollEnd = React.useCallback(() => {\n        options.onScrollEnd?.();\n    }, [options]);\n\n    const onScrollBegin = React.useCallback(() => {\n        options.onScrollBegin?.();\n    }, [options]);\n\n    const scrollWithTiming = React.useCallback(\n        (toValue: number, onFinished?: () => void) => {\n            'worklet';\n            const callback = (isFinished: boolean) => {\n                'worklet';\n                if (isFinished) {\n                    runOnJS(onScrollEnd)();\n                    onFinished && runOnJS(onFinished)();\n                }\n            };\n\n            const defaultWithAnimation: WithTimingAnimation = {\n                type: 'timing',\n                config: { duration, easing: Easing.easeOutQuart },\n            };\n\n            return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n                toValue,\n                callback\n            );\n        },\n        [duration, withAnimation, onScrollEnd]\n    );\n\n    const next = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            'worklet';\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value >= length - 1)) return;\n\n            onScrollBegin?.();\n\n            const nextPage = currentFixedPage() + count;\n            index.value = nextPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -nextPage * size,\n                    onFinished\n                ) as any;\n            } else {\n                handlerOffsetX.value = -nextPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            length,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const prev = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value <= 0)) return;\n\n            onScrollBegin?.();\n\n            const prevPage = currentFixedPage() - count;\n            index.value = prevPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -prevPage * size,\n                    onFinished\n                );\n            } else {\n                handlerOffsetX.value = -prevPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const to = React.useCallback(\n        (idx: number, animated: boolean = false) => {\n            if (idx === index.value) return;\n            if (!canSliding()) return;\n\n            onScrollBegin?.();\n\n            const offset = handlerOffsetX.value + (index.value - idx) * size;\n\n            if (animated) {\n                index.value = idx;\n                handlerOffsetX.value = scrollWithTiming(offset);\n            } else {\n                handlerOffsetX.value = offset;\n                index.value = idx;\n                runOnJS(onScrollEnd)();\n            }\n        },\n        [\n            index,\n            canSliding,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            onScrollEnd,\n        ]\n    );\n\n    const scrollTo = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count, animated = false, onFinished } = opts;\n            if (!count) {\n                return;\n            }\n            const n = Math.round(count);\n            if (n < 0) {\n                prev({ count: Math.abs(n), animated, onFinished });\n            } else {\n                next({ count: n, animated, onFinished });\n            }\n        },\n        [prev, next]\n    );\n\n    return {\n        next,\n        prev,\n        to,\n        scrollTo,\n        index,\n        length,\n        sharedIndex,\n        sharedPreIndex,\n        computedIndex,\n        getCurrentIndex,\n    };\n}\n"]}